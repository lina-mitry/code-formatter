public Page<BooksList> findBooks(FindBookDto findBookDto, int limit, int offset)
 { Page<BooksList> page = new Page<>(); page.setPageSize(limit); page.setCurrentPage(offset / limit + 1); int count; if (findBookDto.getExcludedUser().isPresent()) { count = booksListRepository.countAllByQuery(findBookDto.getStatus().name(), findBookDto.getExcludedUser().get().getUserId(), findBookDto.getQuery()); page.setTotalPage((int) Math.ceil( (float) count / limit)); page.setContent(booksListRepository.findAllByQuery( findBookDto.getStatus().name(), findBookDto.getExcludedUser().get().getUserId(), findBookDto.getQuery(), limit, offset)); } else { count = booksListRepository.countAllByQuery(findBookDto.getStatus().name(), findBookDto.getQuery()); page.setTotalPage((int) Math.ceil( (float) count / limit)); page.setContent(booksListRepository.findAllByQuery( findBookDto.getStatus().name(), findBookDto.getQuery(), limit, offset)); } return page; }